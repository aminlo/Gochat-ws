name: cd

on:
  push:
    branches: [main]
    paths:
      - backend/**

jobs:
    Deploy:
        runs-on: ubuntu-latest
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_STRING: ${{ secrets.JWT_STRING }}
        steps:
          - name: Checkout code
            uses: actions/checkout@v4

          - name: Set up Go
            uses: actions/setup-go@v5
            with:
              go-version: '1.24.0'

          - name: Build app
            run: |
              cd backend/websock/
              CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o Gochat-ws

          - id: 'auth'
            uses: 'google-github-actions/auth@v2'
            with:
              credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

          - name: 'Set up Cloud SDK'
            uses: 'google-github-actions/setup-gcloud@v2'

          - name: 'Use gcloud CLI'
            run: 'gcloud info'

          - name: Set GCP Project
            run: gcloud config set project gochat-proj

          - name: Build and push Docker image to Artifact Registry
            run: |
              IMAGE_NAME=us-central1-docker.pkg.dev/gochat-proj/gochat-ar-repo/gochat
              gcloud builds submit --tag $IMAGE_NAME:latest .
              gcloud container images add-tag $IMAGE_NAME:latest $IMAGE_NAME:v1

          - name: Download Goose
            run: go install github.com/pressly/goose/v3/cmd/goose@latest

          - name: Deploy to Cloud Run
            run: |
              IMAGE_NAME=us-central1-docker.pkg.dev/gochat-proj/gochat-ar-repo/gochat
              gcloud run deploy notely --image $IMAGE_NAME:latest --region us-central1 --allow-unauthenticated --max-instances=1
